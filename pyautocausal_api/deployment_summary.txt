## Project Goal:
Deploy the `pyautocausal_api` application (FastAPI web server, Celery for background tasks, using the `pyautocausal` library) from a local proof-of-concept to AWS.

## Current Status & Key Decisions:

1.  **Local Setup:**
    *   A functional local `pyautocausal_api` using FastAPI, Celery, and a local Redis instance.
    *   Dependencies managed by Poetry.

2.  **AWS Infrastructure Setup:**
    *   **ElastiCache for Redis:** Instance created, primary endpoint obtained.
    *   **EC2 Instance:**
        *   Launched using Amazon Linux 2023 AMI (`al2023-ami-2023.7.20250428.1-kernel-6.1-x86_64`).
        *   Public DNS: `ec2-3-141-193-89.us-east-2.compute.amazonaws.com`.
        *   SSH access confirmed using `ec2-user` and the PEM key `/Users/nick/Downloads/nick-testing-v0.pem`.
        *   EC2 instance is in the same security group as ElastiCache for simplified direct networking.
    *   **S3 Buckets:** Assumed to be (or will be) created for input/output.
    *   **IAM Role:** An IAM role is attached to the EC2 instance, presumably for S3 access.

3.  **Deployment Strategy - Docker:**
    *   Decision made to containerize the application using Docker for consistency, portability, and easier dependency management on the server.

4.  **Dockerfile Creation:**
    *   A `Dockerfile` has been created and refined. It is located at the root of the `pyautocausal_api` project.
    *   Uses a multi-stage build with `python:3.10-slim` as the base image.
    *   Installs Poetry and then uses `poetry install --no-dev --no-root` to install application dependencies.
    *   The project structure has an `app/` directory containing `main.py` (FastAPI) and `worker.py` (Celery).
    *   The `Dockerfile` correctly copies the `app/` directory into the image.
    *   The default `CMD` is `["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]` for the FastAPI application, which matches the project structure (`app` instance in `app/main.py`).
    *   The Celery application instance is identified as `celery_app` in `app/worker.py` (Python path: `app.worker.celery_app`).

5.  **Environment Variables:**
    *   Runtime environment variables like `REDIS_URL`, `S3_BUCKET_INPUT`, `S3_BUCKET_OUTPUT`, and `AWS_REGION` will **not** be hardcoded in the `Dockerfile`.
    *   They will be injected at runtime when starting the Docker containers (e.g., via `docker run -e` or a `docker-compose.yml` file with an associated `.env` file).

6.  **Current Position:**
    *   `Dockerfile` is ready in the `pyautocausal_api` project root.
    *   SSH access to the EC2 instance is established.
    *   The immediate next steps involve installing Docker on the EC2 instance, transferring project files, building the Docker image, and then running the containers.

## PEM Key Path:
/Users/nick/Downloads/nick-testing-v0.pem

## EC2 Public DNS:
ec2-3-141-193-89.us-east-2.compute.amazonaws.com

## Default EC2 Username for Amazon Linux 2023:
ec2-user 